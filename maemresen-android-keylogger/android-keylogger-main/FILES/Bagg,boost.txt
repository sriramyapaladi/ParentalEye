from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.ensemble import AdaBoostClassifier
from sklearn.metrics import accuracy_score
import pandas as pd
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
df=pd.read_excel("/content/Pumpkin_Seeds_Dataset.xlsx")
X_train,X_test,Y_train,Y_test=train_test_split(df.drop("Class",axis=1),df[["Class"]],test_size=0.2, random_state=42)

# Bagging
dt=DecisionTreeClassifier()
bg=BaggingClassifier(dt,n_estimators=100)#also for 10
bg=bg.fit(X_train,Y_train)
predictions_ensemble = bg.predict(X_test)
accuracy_ensemble = accuracy_score(Y_test,predictions_ensemble)
print("Accuracy_ensemble",accuracy_ensemble)

#Random Forest
rf = RandomForestClassifier(n_estimators=100)
rf.fit(X_train, Y_train)
predictions_rf = rf.predict(X_test)
accuracy = accuracy_score(Y_test, predictions_rf)
print("Accuracy", accuracy)

#Boosting
bc=GradientBoostingClassifier(n_estimators=100)
bc.fit(X_train, Y_train)
predictions_bc = bc.predict(X_test)
accuracy = accuracy_score(Y_test, predictions_bc)
print("Accuracy:", accuracy)